package com.myCodeBook.controllers;

import java.io.File;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.security.Principal;
import java.util.List;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.io.ClassPathResource;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;

import com.myCodeBook.dao.ContactRepository;
import com.myCodeBook.dao.UserRepository;
import com.myCodeBook.entities.Contact;
import com.myCodeBook.entities.User;
import com.myCodeBook.helper.FileUploadHelper;
import com.myCodeBook.helper.Message;

@Controller
@RequestMapping("/user")
public class UserController {
	
	@Autowired
	private UserRepository userRepository;
	
	@Autowired
	private ContactRepository contactRepository;
	
	
	@Autowired
	private FileUploadHelper fileUploadHelper;
	
	
	@ModelAttribute
	public void commonData(Model model, Principal principal) {
		String username = principal.getName();
		User user = userRepository.getUserByUserName(username);
		model.addAttribute("user", user);
	}
	
	@RequestMapping("/index")
	public String index(Model model) {
		model.addAttribute("title", "Dashboad");
		return "normal/index";
	}
	
	
	@GetMapping("/add-contact")
	public String addContact(Model model) {
		model.addAttribute("title", "Add contact");
		model.addAttribute("contact", new Contact());
		return "normal/add_contact";
	}
	
	@PostMapping("/process-contact")
	public String processContact(@ModelAttribute Contact contact,@RequestParam("Profileimage") MultipartFile image, Principal principal , HttpSession session) {
	
		
		try {
		String username =  principal.getName();
		User user  =  this.userRepository.getUserByUserName(username);
		if(image.isEmpty()) {
			contact.setImage("default.png");
		}else {
			contact.setImage(image.getOriginalFilename());
		    fileUploadHelper.uploadFileHelper(image);
		}
		contact.setUser(user);
		user.getContacts().add(contact);
		this.userRepository.save(user);
		session.setAttribute("message", new Message("Successfully Added !","success"));
		System.out.println(contact);
		}
		catch(Exception e) {
			e.printStackTrace();
			session.setAttribute("message", new Message("Something went wrong !","danger"));

		}
		return "normal/add_contact";
		
	}

	
	@RequestMapping("/show-contacts")
	public String showContacts(Model model, Principal principal) {
		model.addAttribute("title", "Show Contacts");
		String name = principal.getName();
		User userByUserName = this.userRepository.getUserByUserName(name);
		List<Contact> list = this.contactRepository.findContactsByUser(userByUserName.getId());
		model.addAttribute("contacts", list);
		return "normal/show_contacts";
	}
}
